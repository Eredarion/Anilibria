import java.text.DateFormat
import java.text.SimpleDateFormat

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'io.fabric'


static def getDateTime() {
    DateFormat df = new SimpleDateFormat("dd MMMMM yyyy")
    return df.format(new Date()) + " Ð³."
}

android {
    compileSdkVersion 27
    buildToolsVersion '27.0.3'

    defaultConfig {
        applicationId "ru.radiationx.anilibria"
        minSdkVersion 19
        targetSdkVersion 27
        versionCode 25
        versionName "2.0.8"
        buildConfigField "String", 'BUILD_DATE', '"' + getDateTime() + '"'
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    flavorDimensions "wtf"
    productFlavors {
        stable {
            dimension "wtf"
        }
        app {
            dimension "wtf"
            applicationIdSuffix ".app"
        }
        beta {
            applicationIdSuffix '.beta'
            dimension "wtf"
        }
    }
    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }
    lintOptions {
        disable 'RestrictedApi'
        checkReleaseBuilds false
    }
}
ext {
    supportLibVersion = '27.1.0'
    okHttpVersion = '3.9.0'
}
dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support.constraint:constraint-layout:1.1.0-beta6'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'

    implementation "com.android.support:appcompat-v7:${supportLibVersion}"
    implementation "com.android.support:design:${supportLibVersion}"
    implementation "com.android.support:cardview-v7:${supportLibVersion}"
    implementation "com.android.support:preference-v7:${supportLibVersion}"

    implementation "com.squareup.okhttp3:okhttp:${okHttpVersion}"
    implementation "com.squareup.okhttp3:okhttp-urlconnection:${okHttpVersion}"
    implementation "com.squareup.okhttp3:logging-interceptor:${okHttpVersion}"

    implementation 'com.nostra13.universalimageloader:universal-image-loader:1.9.5'

    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.1.7'
    implementation "com.jakewharton.rxrelay2:rxrelay:2.0.0"
    implementation 'com.jakewharton.rxbinding2:rxbinding:2.0.0'

    implementation 'com.arello-mobile:moxy:1.5.3'
    implementation 'com.arello-mobile:moxy-app-compat:1.5.3'
    kapt 'com.arello-mobile:moxy-compiler:1.5.3'

    implementation 'ru.terrakok.cicerone:cicerone:2.1.0'

    implementation 'com.github.Cutta:TagView:1.3'

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"

    implementation 'com.lapism:searchview:5.0.0-alpha7'
    implementation 'com.google.android:flexbox:0.3.1'

    implementation 'com.devbrackets.android:exomedia:4.2.0'

    implementation 'org.bsc.util:minitemplator-repackaged:1.2'

    implementation 'com.hannesdorfmann:adapterdelegates3:3.0.1'

    implementation 'de.hdodenhof:circleimageview:2.2.0'

    /*compile('com.crashlytics.sdk.android:crashlytics:2.8.0@aar') {
        transitive = true;
    }*/

    implementation("com.github.hotchemi:permissionsdispatcher:3.1.0")
    kapt "com.github.hotchemi:permissionsdispatcher-processor:3.1.0"

    implementation 'com.yandex.android:mobmetricalib:2.80'

    implementation 'me.zhanghai.android.materialprogressbar:library:1.4.2'
}

